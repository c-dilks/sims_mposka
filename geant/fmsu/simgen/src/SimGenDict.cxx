//
// File generated by rootcint at Wed Jul  5 22:53:10 2017

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME SimGenDict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "SimGenDict.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TInterpreter.h"
#include "TVirtualMutex.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void Particle_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_Particle(void *p = 0);
   static void *newArray_Particle(Long_t size, void *p);
   static void delete_Particle(void *p);
   static void deleteArray_Particle(void *p);
   static void destruct_Particle(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::Particle*)
   {
      ::Particle *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::Particle >(0);
      static ::ROOT::TGenericClassInfo 
         instance("Particle", ::Particle::Class_Version(), "./Particle.h", 11,
                  typeid(::Particle), DefineBehavior(ptr, ptr),
                  &::Particle::Dictionary, isa_proxy, 4,
                  sizeof(::Particle) );
      instance.SetNew(&new_Particle);
      instance.SetNewArray(&newArray_Particle);
      instance.SetDelete(&delete_Particle);
      instance.SetDeleteArray(&deleteArray_Particle);
      instance.SetDestructor(&destruct_Particle);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::Particle*)
   {
      return GenerateInitInstanceLocal((::Particle*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Particle*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void HashKF_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_HashKF(void *p);
   static void deleteArray_HashKF(void *p);
   static void destruct_HashKF(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::HashKF*)
   {
      ::HashKF *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HashKF >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HashKF", ::HashKF::Class_Version(), "./HashKF.h", 22,
                  typeid(::HashKF), DefineBehavior(ptr, ptr),
                  &::HashKF::Dictionary, isa_proxy, 4,
                  sizeof(::HashKF) );
      instance.SetDelete(&delete_HashKF);
      instance.SetDeleteArray(&deleteArray_HashKF);
      instance.SetDestructor(&destruct_HashKF);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::HashKF*)
   {
      return GenerateInitInstanceLocal((::HashKF*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HashKF*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void EventLoop_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_EventLoop(void *p);
   static void deleteArray_EventLoop(void *p);
   static void destruct_EventLoop(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::EventLoop*)
   {
      ::EventLoop *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::EventLoop >(0);
      static ::ROOT::TGenericClassInfo 
         instance("EventLoop", ::EventLoop::Class_Version(), "./EventLoop.h", 20,
                  typeid(::EventLoop), DefineBehavior(ptr, ptr),
                  &::EventLoop::Dictionary, isa_proxy, 4,
                  sizeof(::EventLoop) );
      instance.SetDelete(&delete_EventLoop);
      instance.SetDeleteArray(&deleteArray_EventLoop);
      instance.SetDestructor(&destruct_EventLoop);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::EventLoop*)
   {
      return GenerateInitInstanceLocal((::EventLoop*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::EventLoop*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void Analysis_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_Analysis(void *p);
   static void deleteArray_Analysis(void *p);
   static void destruct_Analysis(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::Analysis*)
   {
      ::Analysis *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::Analysis >(0);
      static ::ROOT::TGenericClassInfo 
         instance("Analysis", ::Analysis::Class_Version(), "./Analysis.h", 29,
                  typeid(::Analysis), DefineBehavior(ptr, ptr),
                  &::Analysis::Dictionary, isa_proxy, 4,
                  sizeof(::Analysis) );
      instance.SetDelete(&delete_Analysis);
      instance.SetDeleteArray(&deleteArray_Analysis);
      instance.SetDestructor(&destruct_Analysis);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::Analysis*)
   {
      return GenerateInitInstanceLocal((::Analysis*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Analysis*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
atomic_TClass_ptr Particle::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *Particle::Class_Name()
{
   return "Particle";
}

//______________________________________________________________________________
const char *Particle::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::Particle*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int Particle::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::Particle*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void Particle::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::Particle*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *Particle::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::Particle*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HashKF::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HashKF::Class_Name()
{
   return "HashKF";
}

//______________________________________________________________________________
const char *HashKF::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::HashKF*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HashKF::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::HashKF*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HashKF::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::HashKF*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HashKF::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::HashKF*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr EventLoop::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *EventLoop::Class_Name()
{
   return "EventLoop";
}

//______________________________________________________________________________
const char *EventLoop::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::EventLoop*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int EventLoop::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::EventLoop*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void EventLoop::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::EventLoop*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *EventLoop::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::EventLoop*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr Analysis::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *Analysis::Class_Name()
{
   return "Analysis";
}

//______________________________________________________________________________
const char *Analysis::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::Analysis*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int Analysis::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::Analysis*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void Analysis::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::Analysis*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *Analysis::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::Analysis*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
void Particle::Streamer(TBuffer &R__b)
{
   // Stream an object of class Particle.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(Particle::Class(),this);
   } else {
      R__b.WriteClassBuffer(Particle::Class(),this);
   }
}

//______________________________________________________________________________
void Particle::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class Particle.
      TClass *R__cl = ::Particle::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "kf", &kf);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "kc", &kc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pname[64]", pname);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "aname[64]", aname);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "chg", &chg);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "col", &col);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "anticol", &anticol);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mass", &mass);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "width", &width);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "wcut", &wcut);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "lifetime", &lifetime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "decay", &decay);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_Particle(void *p) {
      return  p ? new(p) ::Particle : new ::Particle;
   }
   static void *newArray_Particle(Long_t nElements, void *p) {
      return p ? new(p) ::Particle[nElements] : new ::Particle[nElements];
   }
   // Wrapper around operator delete
   static void delete_Particle(void *p) {
      delete ((::Particle*)p);
   }
   static void deleteArray_Particle(void *p) {
      delete [] ((::Particle*)p);
   }
   static void destruct_Particle(void *p) {
      typedef ::Particle current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::Particle

//______________________________________________________________________________
void HashKF::Streamer(TBuffer &R__b)
{
   // Stream an object of class HashKF.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(HashKF::Class(),this);
   } else {
      R__b.WriteClassBuffer(HashKF::Class(),this);
   }
}

//______________________________________________________________________________
void HashKF::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HashKF.
      TClass *R__cl = ::HashKF::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "key", &key);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*nHashProbes", &nHashProbes);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "returnkey", &returnkey);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "initkey", &initkey);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "useAnti", &useAnti);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*PDGtable", &PDGtable);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*antiPDGtable", &antiPDGtable);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "KF_", &KF_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "KC_", &KC_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pname_[64]", pname_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "aname_[64]", aname_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "chg_", &chg_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "col_", &col_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "anticol_", &anticol_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mass_", &mass_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "width_", &width_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "wcut_", &wcut_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "lifetime_", &lifetime_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "decay_", &decay_);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_HashKF(void *p) {
      delete ((::HashKF*)p);
   }
   static void deleteArray_HashKF(void *p) {
      delete [] ((::HashKF*)p);
   }
   static void destruct_HashKF(void *p) {
      typedef ::HashKF current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::HashKF

//______________________________________________________________________________
void EventLoop::Streamer(TBuffer &R__b)
{
   // Stream an object of class EventLoop.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(EventLoop::Class(),this);
   } else {
      R__b.WriteClassBuffer(EventLoop::Class(),this);
   }
}

//______________________________________________________________________________
void EventLoop::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class EventLoop.
      TClass *R__cl = ::EventLoop::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pythia", &pythia);
      R__insp.InspectMember(pythia, "pythia.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*particles", &particles);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*events", &events);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vx", &vx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vy", &vy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vz", &vz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "px", &px);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "py", &py);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pz", &pz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "E", &E);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m", &m);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eta", &eta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pmag", &pmag);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pt", &pt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "KS", &KS);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "KF", &KF);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PName[64]", PName);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "evt_num", &evt_num);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nev", &nev);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "macbase", &macbase);
      R__insp.InspectMember(macbase, "macbase.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "macrofile", &macrofile);
      R__insp.InspectMember(macrofile, "macrofile.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eventstring", &eventstring);
      R__insp.InspectMember(eventstring, "eventstring.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "etamingen", &etamingen);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "etamaxgen", &etamaxgen);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ptmingen", &ptmingen);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ptmaxgen", &ptmaxgen);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "etamincuts", &etamincuts);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "etamaxcuts", &etamaxcuts);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ptmincuts", &ptmincuts);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ptmaxcuts", &ptmaxcuts);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Emincuts", &Emincuts);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Emaxcuts", &Emaxcuts);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "KLineFirst", &KLineFirst);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "JPsiAnalysis", &JPsiAnalysis);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Pi0Analysis", &Pi0Analysis);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "JustTriggeredPi0", &JustTriggeredPi0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Only1Pi0", &Only1Pi0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "UseMinBiasPi0", &UseMinBiasPi0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "myfile", (void*)&myfile);
      R__insp.InspectMember("ofstream", (void*)&myfile, "myfile.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "outstring", &outstring);
      R__insp.InspectMember(outstring, "outstring.");
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_EventLoop(void *p) {
      delete ((::EventLoop*)p);
   }
   static void deleteArray_EventLoop(void *p) {
      delete [] ((::EventLoop*)p);
   }
   static void destruct_EventLoop(void *p) {
      typedef ::EventLoop current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::EventLoop

//______________________________________________________________________________
void Analysis::Streamer(TBuffer &R__b)
{
   // Stream an object of class Analysis.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(Analysis::Class(),this);
   } else {
      R__b.WriteClassBuffer(Analysis::Class(),this);
   }
}

//______________________________________________________________________________
void Analysis::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class Analysis.
      TClass *R__cl = ::Analysis::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "SIMGENDIR", &SIMGENDIR);
      R__insp.InspectMember(SIMGENDIR, "SIMGENDIR.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*evtr", &evtr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sqrts", &sqrts);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*parttmp", &parttmp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*name_hist_full", &name_hist_full);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*pion_en", &pion_en);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*nucleon_en", &nucleon_en);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*photon_en", &photon_en);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*kaon_en", &kaon_en);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*lepton_en", &lepton_en);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*neutrino_en", &neutrino_en);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*pion_pt", &pion_pt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*nucleon_pt", &nucleon_pt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*photon_pt", &photon_pt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*kaon_pt", &kaon_pt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*lepton_pt", &lepton_pt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*neutrino_pt", &neutrino_pt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*pion_pz", &pion_pz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*nucleon_pz", &nucleon_pz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*photon_pz", &photon_pz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*kaon_pz", &kaon_pz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*lepton_pz", &lepton_pz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*neutrino_pz", &neutrino_pz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*pion_ep", &pion_ep);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*nucleon_ep", &nucleon_ep);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*photon_ep", &photon_ep);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*kaon_ep", &kaon_ep);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*lepton_ep", &lepton_ep);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*neutrino_ep", &neutrino_ep);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*all_ep", &all_ep);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*c_en", &c_en);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*c_pt", &c_pt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*c_pz", &c_pz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*c_ep", &c_ep);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*c_name", &c_name);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*c_name_full", &c_name_full);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*KF_le", &KF_le);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*KS_le", &KS_le);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Energy_le", &Energy_le);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*px_le", &px_le);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*py_le", &py_le);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*pz_le", &pz_le);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*parent_le", &parent_le);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fchild_le", &fchild_le);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*lchild_le", &lchild_le);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "KF_le_len", &KF_le_len);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "part_num", &part_num);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "KF", &KF);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "KS", &KS);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Energy", &Energy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PName[64]", PName);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "px", &px);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "py", &py);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pz", &pz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pt", &pt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pmag", &pmag);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "theta", &theta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eta", &eta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phi", &phi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "parent", &parent);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fchild", &fchild);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "lchild", &lchild);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "outParticle", &outParticle);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_Analysis(void *p) {
      delete ((::Analysis*)p);
   }
   static void deleteArray_Analysis(void *p) {
      delete [] ((::Analysis*)p);
   }
   static void destruct_Analysis(void *p) {
      typedef ::Analysis current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::Analysis

/********************************************************
* SimGenDict.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableSimGenDict();

extern "C" void G__set_cpp_environmentSimGenDict() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("Particle.h");
  G__add_compiledheader("HashKF.h");
  G__add_compiledheader("EventLoop.h");
  G__add_compiledheader("Analysis.h");
  G__cpp_reset_tagtableSimGenDict();
}
#include <new>
extern "C" int G__cpp_dllrevSimGenDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* Particle */
static int G__SimGenDict_168_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Particle* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Particle[n];
     } else {
       p = new((void*) gvp) Particle[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Particle;
     } else {
       p = new((void*) gvp) Particle;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__SimGenDictLN_Particle));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimGenDict_168_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Particle* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 12
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new Particle(
(Long_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Int_t) G__int(libp->para[6]), (Float_t) G__double(libp->para[7])
, (Float_t) G__double(libp->para[8]), (Float_t) G__double(libp->para[9])
, (Float_t) G__double(libp->para[10]), (Int_t) G__int(libp->para[11]));
   } else {
     p = new((void*) gvp) Particle(
(Long_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Int_t) G__int(libp->para[6]), (Float_t) G__double(libp->para[7])
, (Float_t) G__double(libp->para[8]), (Float_t) G__double(libp->para[9])
, (Float_t) G__double(libp->para[10]), (Int_t) G__int(libp->para[11]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__SimGenDictLN_Particle));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimGenDict_168_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Particle*) G__getstructoffset())->SetVals(
(Long_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Int_t) G__int(libp->para[6]), (Float_t) G__double(libp->para[7])
, (Float_t) G__double(libp->para[8]), (Float_t) G__double(libp->para[9])
, (Float_t) G__double(libp->para[10]), (Int_t) G__int(libp->para[11]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimGenDict_168_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 108, (long) ((Particle*) G__getstructoffset())->GetKF());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimGenDict_168_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((Particle*) G__getstructoffset())->GetKC());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimGenDict_168_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((Particle*) G__getstructoffset())->GetPname());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimGenDict_168_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((Particle*) G__getstructoffset())->GetAname());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimGenDict_168_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((Particle*) G__getstructoffset())->GetChg());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimGenDict_168_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((Particle*) G__getstructoffset())->GetCol());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimGenDict_168_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((Particle*) G__getstructoffset())->GetAnticol());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimGenDict_168_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((Particle*) G__getstructoffset())->GetMass());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimGenDict_168_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((Particle*) G__getstructoffset())->GetWidth());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimGenDict_168_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((Particle*) G__getstructoffset())->GetWcut());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimGenDict_168_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((Particle*) G__getstructoffset())->GetLifetime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimGenDict_168_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((Particle*) G__getstructoffset())->GetDecay());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimGenDict_168_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Particle*) G__getstructoffset())->SetKF((Long_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimGenDict_168_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Particle*) G__getstructoffset())->SetKC((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimGenDict_168_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Particle*) G__getstructoffset())->SetPname((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimGenDict_168_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Particle*) G__getstructoffset())->SetAname((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimGenDict_168_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Particle*) G__getstructoffset())->SetChg((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimGenDict_168_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Particle*) G__getstructoffset())->SetCol((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimGenDict_168_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Particle*) G__getstructoffset())->SetAnticol((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimGenDict_168_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Particle*) G__getstructoffset())->SetMass((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimGenDict_168_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Particle*) G__getstructoffset())->SetWidth((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimGenDict_168_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Particle*) G__getstructoffset())->SetWcut((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimGenDict_168_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Particle*) G__getstructoffset())->SetLifetime((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimGenDict_168_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Particle*) G__getstructoffset())->SetDecay((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimGenDict_168_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) Particle::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimGenDict_168_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Particle::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimGenDict_168_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) Particle::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimGenDict_168_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      Particle::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimGenDict_168_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Particle*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimGenDict_168_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Particle::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimGenDict_168_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Particle::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimGenDict_168_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Particle::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimGenDict_168_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Particle::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__SimGenDict_168_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   Particle* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new Particle(*(Particle*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__SimGenDictLN_Particle));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Particle G__TParticle;
static int G__SimGenDict_168_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (Particle*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((Particle*) (soff+(sizeof(Particle)*i)))->~G__TParticle();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (Particle*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((Particle*) (soff))->~G__TParticle();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__SimGenDict_168_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Particle* dest = (Particle*) G__getstructoffset();
   *dest = *(Particle*) libp->para[0].ref;
   const Particle& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HashKF */
static int G__SimGenDict_169_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HashKF* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new HashKF((const char*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) HashKF((const char*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__SimGenDictLN_HashKF));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimGenDict_169_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HashKF*) G__getstructoffset())->Hash((Long_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimGenDict_169_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HashKF*) G__getstructoffset())->Put((Long_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimGenDict_169_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HashKF*) G__getstructoffset())->Get((Long_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimGenDict_169_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((HashKF*) G__getstructoffset())->GetParticle((Long_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimGenDict_169_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HashKF*) G__getstructoffset())->PrintParticleInfo((Long_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimGenDict_169_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HashKF*) G__getstructoffset())->PrintHashTable();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimGenDict_169_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HashKF*) G__getstructoffset())->CheckHashTable();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimGenDict_169_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HashKF::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimGenDict_169_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HashKF::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimGenDict_169_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HashKF::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimGenDict_169_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HashKF::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimGenDict_169_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HashKF*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimGenDict_169_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HashKF::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimGenDict_169_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HashKF::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimGenDict_169_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HashKF::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimGenDict_169_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HashKF::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__SimGenDict_169_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HashKF* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HashKF(*(HashKF*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__SimGenDictLN_HashKF));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HashKF G__THashKF;
static int G__SimGenDict_169_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HashKF*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HashKF*) (soff+(sizeof(HashKF)*i)))->~G__THashKF();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HashKF*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HashKF*) (soff))->~G__THashKF();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__SimGenDict_169_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HashKF* dest = (HashKF*) G__getstructoffset();
   *dest = *(HashKF*) libp->para[0].ref;
   const HashKF& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* EventLoop */
static int G__SimGenDict_607_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EventLoop* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new EventLoop((Int_t) G__int(libp->para[0]), (Float_t) G__double(libp->para[1]));
   } else {
     p = new((void*) gvp) EventLoop((Int_t) G__int(libp->para[0]), (Float_t) G__double(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__SimGenDictLN_EventLoop));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimGenDict_607_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EventLoop*) G__getstructoffset())->Start();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimGenDict_607_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((EventLoop*) G__getstructoffset())->GetEvents());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimGenDict_607_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((EventLoop*) G__getstructoffset())->GetParticles());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimGenDict_607_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) EventLoop::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimGenDict_607_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EventLoop::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimGenDict_607_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) EventLoop::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimGenDict_607_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      EventLoop::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimGenDict_607_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EventLoop*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimGenDict_607_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EventLoop::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimGenDict_607_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) EventLoop::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimGenDict_607_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EventLoop::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimGenDict_607_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) EventLoop::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef EventLoop G__TEventLoop;
static int G__SimGenDict_607_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (EventLoop*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((EventLoop*) (soff+(sizeof(EventLoop)*i)))->~G__TEventLoop();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (EventLoop*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((EventLoop*) (soff))->~G__TEventLoop();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Analysis */
static int G__SimGenDict_700_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Analysis* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new Analysis((TTree*) G__int(libp->para[0]), (Float_t) G__double(libp->para[1]));
   } else {
     p = new((void*) gvp) Analysis((TTree*) G__int(libp->para[0]), (Float_t) G__double(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__SimGenDictLN_Analysis));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimGenDict_700_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Analysis*) G__getstructoffset())->Analyse();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimGenDict_700_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((Analysis*) G__getstructoffset())->GetHistograms());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimGenDict_700_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((Analysis*) G__getstructoffset())->GetCanvases());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimGenDict_700_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Analysis*) G__getstructoffset())->ListParents((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimGenDict_700_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((Analysis*) G__getstructoffset())->FinalStateFilter((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (TLeaf*) G__int(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimGenDict_700_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Analysis*) G__getstructoffset())->BuildArgfile((Int_t) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1])
, (Float_t) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimGenDict_700_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) Analysis::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimGenDict_700_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Analysis::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimGenDict_700_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) Analysis::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimGenDict_700_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      Analysis::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimGenDict_700_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Analysis*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimGenDict_700_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Analysis::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimGenDict_700_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Analysis::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimGenDict_700_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Analysis::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimGenDict_700_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Analysis::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__SimGenDict_700_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   Analysis* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new Analysis(*(Analysis*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__SimGenDictLN_Analysis));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Analysis G__TAnalysis;
static int G__SimGenDict_700_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (Analysis*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((Analysis*) (soff+(sizeof(Analysis)*i)))->~G__TAnalysis();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (Analysis*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((Analysis*) (soff))->~G__TAnalysis();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__SimGenDict_700_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Analysis* dest = (Analysis*) G__getstructoffset();
   *dest = *(Analysis*) libp->para[0].ref;
   const Analysis& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* Particle */

/* HashKF */

/* EventLoop */

/* Analysis */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncSimGenDict {
 public:
  G__Sizep2memfuncSimGenDict(): p(&G__Sizep2memfuncSimGenDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncSimGenDict::*p)();
};

size_t G__get_sizep2memfuncSimGenDict()
{
  G__Sizep2memfuncSimGenDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceSimGenDict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__SimGenDictLN_Particle))) {
     Particle *G__Lderived;
     G__Lderived=(Particle*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__SimGenDictLN_Particle),G__get_linked_tagnum(&G__SimGenDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__SimGenDictLN_HashKF))) {
     HashKF *G__Lderived;
     G__Lderived=(HashKF*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__SimGenDictLN_HashKF),G__get_linked_tagnum(&G__SimGenDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__SimGenDictLN_EventLoop))) {
     EventLoop *G__Lderived;
     G__Lderived=(EventLoop*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__SimGenDictLN_EventLoop),G__get_linked_tagnum(&G__SimGenDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__SimGenDictLN_Analysis))) {
     Analysis *G__Lderived;
     G__Lderived=(Analysis*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__SimGenDictLN_Analysis),G__get_linked_tagnum(&G__SimGenDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableSimGenDict() {

   /* Setting up typedef entry */
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("Long_t",108,-1,0,-1);
   G__setnewtype(-1,"Signed long integer 8 bytes (long)",0);
   G__search_typename2("Float_t",102,-1,0,-1);
   G__setnewtype(-1,"Float 4 bytes (float)",0);
   G__search_typename2("Bool_t",103,-1,0,-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__SimGenDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__SimGenDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__SimGenDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__SimGenDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__SimGenDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__SimGenDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__SimGenDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__SimGenDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__SimGenDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__SimGenDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__SimGenDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__SimGenDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__SimGenDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__SimGenDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__SimGenDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,TObjArray*>",117,G__get_linked_tagnum(&G__SimGenDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__SimGenDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__SimGenDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*,less<string> >",117,G__get_linked_tagnum(&G__SimGenDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<UInt_t>",117,G__get_linked_tagnum(&G__SimGenDictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TString>",117,G__get_linked_tagnum(&G__SimGenDictLN_vectorlETStringcOallocatorlETStringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__SimGenDictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__SimGenDictLN_vectorlETStringcOallocatorlETStringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__SimGenDictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__SimGenDictLN_vectorlETStringcOallocatorlETStringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__SimGenDictLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__SimGenDictLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__SimGenDictLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__SimGenDictLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pair<UInt_t,Int_t>",117,G__get_linked_tagnum(&G__SimGenDictLN_pairlEunsignedsPintcOintgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::pair<UInt_t,Int_t> >",117,G__get_linked_tagnum(&G__SimGenDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<pair<UInt_t,Int_t> >",117,G__get_linked_tagnum(&G__SimGenDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__SimGenDictLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__SimGenDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__SimGenDictLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__SimGenDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<pair<unsigned int,int> >",117,G__get_linked_tagnum(&G__SimGenDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* Particle */
static void G__setup_memvarParticle(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__SimGenDictLN_Particle));
   { Particle *p; p=(Particle*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->kf)-(long)(p)),108,0,0,-1,G__defined_typename("Long_t"),-1,1,"kf=",0,"pdg kf code");
   G__memvar_setup((void*)((long)(&p->kc)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"kc=",0,"compressed kf code");
   G__memvar_setup((void*)((long)(&p->pname)-(long)(p)),99,0,0,-1,-1,-1,1,"pname[64]=",0,"particle name");
   G__memvar_setup((void*)((long)(&p->aname)-(long)(p)),99,0,0,-1,-1,-1,1,"aname[64]=",0,"antiparticle name");
   G__memvar_setup((void*)((long)(&p->chg)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"chg=",0,"em charge");
   G__memvar_setup((void*)((long)(&p->col)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"col=",0,"colour charge");
   G__memvar_setup((void*)((long)(&p->anticol)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"anticol=",0,"anticolour charge");
   G__memvar_setup((void*)((long)(&p->mass)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"mass=",0,"mass");
   G__memvar_setup((void*)((long)(&p->width)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"width=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->wcut)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"wcut=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->lifetime)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"lifetime=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->decay)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"decay=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SimGenDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HashKF */
static void G__setup_memvarHashKF(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__SimGenDictLN_HashKF));
   { HashKF *p; p=(HashKF*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->key)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"key=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nHashProbes)-(long)(p)),73,0,0,-1,G__defined_typename("Int_t"),-1,1,"nHashProbes=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->returnkey)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"returnkey=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->initkey)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"initkey=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->useAnti)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"useAnti=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->PDGtable)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__SimGenDictLN_Particle),-1,-1,1,"PDGtable=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->antiPDGtable)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__SimGenDictLN_Particle),-1,-1,1,"antiPDGtable=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->KF_)-(long)(p)),108,0,0,-1,G__defined_typename("Long_t"),-1,1,"KF_=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->KC_)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"KC_=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pname_)-(long)(p)),99,0,0,-1,-1,-1,1,"pname_[64]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->aname_)-(long)(p)),99,0,0,-1,-1,-1,1,"aname_[64]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->chg_)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"chg_=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->col_)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"col_=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->anticol_)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"anticol_=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mass_)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"mass_=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->width_)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"width_=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->wcut_)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"wcut_=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->lifetime_)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"lifetime_=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->decay_)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"decay_=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SimGenDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* EventLoop */
static void G__setup_memvarEventLoop(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__SimGenDictLN_EventLoop));
   { EventLoop *p; p=(EventLoop*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->pythia)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__SimGenDictLN_TPythia6),-1,-1,1,"pythia=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->particles)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__SimGenDictLN_TClonesArray),-1,-1,1,"particles=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->events)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__SimGenDictLN_TTree),-1,-1,1,"events=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->vx)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"vx=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->vy)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"vy=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->vz)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"vz=",0,"Location of particle");
   G__memvar_setup((void*)((long)(&p->px)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"px=",0,"P(I,1) - x momentum (GeV/c)");
   G__memvar_setup((void*)((long)(&p->py)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"py=",0,"P(I,2) - y momentum (GeV/c)");
   G__memvar_setup((void*)((long)(&p->pz)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"pz=",0,"P(I,3) - z momentum (GeV/c)");
   G__memvar_setup((void*)((long)(&p->E)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"E=",0,"P(I,4) - energy (GeV)");
   G__memvar_setup((void*)((long)(&p->m)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"m=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->eta)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"eta=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pmag)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"pmag=",0,"magnitude of momentum");
   G__memvar_setup((void*)((long)(&p->pt)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"pt=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->KS)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"KS=",0,"Status code >10 means particle does not exist at end");
   G__memvar_setup((void*)((long)(&p->KF)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"KF=",0,"Particle ID code.");
   G__memvar_setup((void*)((long)(&p->PName)-(long)(p)),99,0,0,-1,-1,-1,1,"PName[64]=",0,"holds name of particle temporarily");
   G__memvar_setup((void*)((long)(&p->evt_num)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"evt_num=",0,"dummy variable to iterate in particle name");
   G__memvar_setup((void*)((long)(&p->nev)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"nev=",0,"number of events");
   G__memvar_setup((void*)((long)(&p->macbase)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__SimGenDictLN_TString),-1,-1,1,"macbase=",0,"directory with macros + \"macro\"");
   G__memvar_setup((void*)((long)(&p->macrofile)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__SimGenDictLN_TString),-1,-1,1,"macrofile=",0,"combination of macbase + evt_num + .mac");
   G__memvar_setup((void*)((long)(&p->eventstring)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__SimGenDictLN_TString),-1,-1,1,"eventstring=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->etamingen)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"etamingen=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->etamaxgen)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"etamaxgen=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ptmingen)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"ptmingen=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ptmaxgen)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"ptmaxgen=",0,"Used for gen");
   G__memvar_setup((void*)((long)(&p->etamincuts)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"etamincuts=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->etamaxcuts)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"etamaxcuts=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ptmincuts)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"ptmincuts=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ptmaxcuts)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"ptmaxcuts=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Emincuts)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"Emincuts=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Emaxcuts)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"Emaxcuts=",0,"Used for cuts");
   G__memvar_setup((void*)((long)(&p->KLineFirst)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"KLineFirst=",0,"BS. Using For JPsi this will give the first daughter, which for Jpsi will be eithier e+ or e-, with the other on the next line");
   G__memvar_setup((void*)((long)(&p->JPsiAnalysis)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"JPsiAnalysis=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Pi0Analysis)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"Pi0Analysis=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->JustTriggeredPi0)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"JustTriggeredPi0=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Only1Pi0)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"Only1Pi0=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->UseMinBiasPi0)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"UseMinBiasPi0=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->myfile)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__SimGenDictLN_basic_ofstreamlEcharcOchar_traitslEchargRsPgR),G__defined_typename("ofstream"),-1,1,"myfile=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->outstring)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__SimGenDictLN_TString),-1,-1,1,"outstring=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SimGenDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* Analysis */
static void G__setup_memvarAnalysis(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__SimGenDictLN_Analysis));
   { Analysis *p; p=(Analysis*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->SIMGENDIR)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__SimGenDictLN_TString),-1,-1,1,"SIMGENDIR=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->evtr)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__SimGenDictLN_TTree),-1,-1,1,"evtr=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->sqrts)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"sqrts=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->parttmp)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__SimGenDictLN_TMCParticle),-1,-1,1,"parttmp=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->name_hist_full)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__SimGenDictLN_TH1F),-1,-1,1,"name_hist_full=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pion_en)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__SimGenDictLN_TH1F),-1,-1,1,"pion_en=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nucleon_en)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__SimGenDictLN_TH1F),-1,-1,1,"nucleon_en=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->photon_en)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__SimGenDictLN_TH1F),-1,-1,1,"photon_en=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->kaon_en)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__SimGenDictLN_TH1F),-1,-1,1,"kaon_en=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->lepton_en)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__SimGenDictLN_TH1F),-1,-1,1,"lepton_en=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->neutrino_en)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__SimGenDictLN_TH1F),-1,-1,1,"neutrino_en=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pion_pt)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__SimGenDictLN_TH1F),-1,-1,1,"pion_pt=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nucleon_pt)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__SimGenDictLN_TH1F),-1,-1,1,"nucleon_pt=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->photon_pt)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__SimGenDictLN_TH1F),-1,-1,1,"photon_pt=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->kaon_pt)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__SimGenDictLN_TH1F),-1,-1,1,"kaon_pt=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->lepton_pt)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__SimGenDictLN_TH1F),-1,-1,1,"lepton_pt=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->neutrino_pt)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__SimGenDictLN_TH1F),-1,-1,1,"neutrino_pt=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pion_pz)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__SimGenDictLN_TH1F),-1,-1,1,"pion_pz=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nucleon_pz)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__SimGenDictLN_TH1F),-1,-1,1,"nucleon_pz=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->photon_pz)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__SimGenDictLN_TH1F),-1,-1,1,"photon_pz=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->kaon_pz)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__SimGenDictLN_TH1F),-1,-1,1,"kaon_pz=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->lepton_pz)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__SimGenDictLN_TH1F),-1,-1,1,"lepton_pz=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->neutrino_pz)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__SimGenDictLN_TH1F),-1,-1,1,"neutrino_pz=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pion_ep)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__SimGenDictLN_TH2F),-1,-1,1,"pion_ep=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nucleon_ep)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__SimGenDictLN_TH2F),-1,-1,1,"nucleon_ep=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->photon_ep)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__SimGenDictLN_TH2F),-1,-1,1,"photon_ep=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->kaon_ep)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__SimGenDictLN_TH2F),-1,-1,1,"kaon_ep=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->lepton_ep)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__SimGenDictLN_TH2F),-1,-1,1,"lepton_ep=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->neutrino_ep)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__SimGenDictLN_TH2F),-1,-1,1,"neutrino_ep=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->all_ep)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__SimGenDictLN_TH2F),-1,-1,1,"all_ep=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->c_en)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__SimGenDictLN_TCanvas),-1,-1,1,"c_en=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->c_pt)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__SimGenDictLN_TCanvas),-1,-1,1,"c_pt=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->c_pz)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__SimGenDictLN_TCanvas),-1,-1,1,"c_pz=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->c_ep)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__SimGenDictLN_TCanvas),-1,-1,1,"c_ep=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->c_name)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__SimGenDictLN_TCanvas),-1,-1,1,"c_name=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->c_name_full)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__SimGenDictLN_TCanvas),-1,-1,1,"c_name_full=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->KF_le)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__SimGenDictLN_TLeaf),-1,-1,1,"KF_le=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->KS_le)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__SimGenDictLN_TLeaf),-1,-1,1,"KS_le=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Energy_le)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__SimGenDictLN_TLeaf),-1,-1,1,"Energy_le=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->px_le)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__SimGenDictLN_TLeaf),-1,-1,1,"px_le=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->py_le)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__SimGenDictLN_TLeaf),-1,-1,1,"py_le=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pz_le)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__SimGenDictLN_TLeaf),-1,-1,1,"pz_le=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->parent_le)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__SimGenDictLN_TLeaf),-1,-1,1,"parent_le=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fchild_le)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__SimGenDictLN_TLeaf),-1,-1,1,"fchild_le=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->lchild_le)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__SimGenDictLN_TLeaf),-1,-1,1,"lchild_le=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->KF_le_len)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"KF_le_len=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->part_num)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"part_num=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->KF)-(long)(p)),108,0,0,-1,G__defined_typename("Long_t"),-1,1,"KF=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->KS)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"KS=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Energy)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"Energy=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->PName)-(long)(p)),99,0,0,-1,-1,-1,1,"PName[64]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->px)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"px=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->py)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"py=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pz)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"pz=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pt)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"pt=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pmag)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"pmag=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->theta)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"theta=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->eta)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"eta=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->phi)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"phi=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->parent)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"parent=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fchild)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fchild=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->lchild)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"lchild=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->outParticle)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"outParticle=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SimGenDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarSimGenDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncParticle(void) {
   /* Particle */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__SimGenDictLN_Particle));
   G__memfunc_setup("Particle",820,G__SimGenDict_168_0_1, 105, G__get_linked_tagnum(&G__SimGenDictLN_Particle), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Particle",820,G__SimGenDict_168_0_2, 105, G__get_linked_tagnum(&G__SimGenDictLN_Particle), -1, 0, 12, 1, 1, 0, 
"l - 'Long_t' 0 - kf_ i - 'Int_t' 0 - kc_ "
"C - - 10 - pname_ C - - 10 - aname_ "
"i - 'Int_t' 0 - chg_ i - 'Int_t' 0 - col_ "
"i - 'Int_t' 0 - anticol_ f - 'Float_t' 0 - mass_ "
"f - 'Float_t' 0 - width_ f - 'Float_t' 0 - wcut_ "
"f - 'Float_t' 0 - lifetime_ i - 'Int_t' 0 - decay_", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetVals",706,G__SimGenDict_168_0_3, 121, -1, -1, 0, 12, 1, 1, 0, 
"l - 'Long_t' 0 - kf_ i - 'Int_t' 0 - kc_ "
"C - - 10 - pname_ C - - 10 - aname_ "
"i - 'Int_t' 0 - chg_ i - 'Int_t' 0 - col_ "
"i - 'Int_t' 0 - anticol_ f - 'Float_t' 0 - mass_ "
"f - 'Float_t' 0 - width_ f - 'Float_t' 0 - wcut_ "
"f - 'Float_t' 0 - lifetime_ i - 'Int_t' 0 - decay_", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetKF",433,G__SimGenDict_168_0_4, 108, -1, G__defined_typename("Long_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetKC",430,G__SimGenDict_168_0_5, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPname",785,G__SimGenDict_168_0_6, 67, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAname",770,G__SimGenDict_168_0_7, 67, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetChg",562,G__SimGenDict_168_0_8, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCol",574,G__SimGenDict_168_0_9, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAnticol",1002,G__SimGenDict_168_0_10, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMass",692,G__SimGenDict_168_0_11, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetWidth",800,G__SimGenDict_168_0_12, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetWcut",707,G__SimGenDict_168_0_13, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLifetime",1103,G__SimGenDict_168_0_14, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDecay",774,G__SimGenDict_168_0_15, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetKF",445,G__SimGenDict_168_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "l - 'Long_t' 0 - kf_", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetKC",442,G__SimGenDict_168_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - kc_", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPname",797,G__SimGenDict_168_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - pname_", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetAname",782,G__SimGenDict_168_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - aname_", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetChg",574,G__SimGenDict_168_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - chg_", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCol",586,G__SimGenDict_168_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - col_", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetAnticol",1014,G__SimGenDict_168_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - anticol_", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMass",704,G__SimGenDict_168_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - mass_", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetWidth",812,G__SimGenDict_168_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - width_", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetWcut",719,G__SimGenDict_168_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - wcut_", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetLifetime",1115,G__SimGenDict_168_0_26, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - lifetime_", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDecay",786,G__SimGenDict_168_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - decay_", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__SimGenDict_168_0_28, 85, G__get_linked_tagnum(&G__SimGenDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&Particle::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__SimGenDict_168_0_29, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Particle::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__SimGenDict_168_0_30, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&Particle::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__SimGenDict_168_0_31, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&Particle::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__SimGenDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__SimGenDict_168_0_35, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__SimGenDict_168_0_36, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Particle::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__SimGenDict_168_0_37, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Particle::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__SimGenDict_168_0_38, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Particle::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__SimGenDict_168_0_39, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Particle::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("Particle", 820, G__SimGenDict_168_0_40, (int) ('i'), G__get_linked_tagnum(&G__SimGenDictLN_Particle), -1, 0, 1, 1, 1, 0, "u 'Particle' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Particle", 946, G__SimGenDict_168_0_41, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__SimGenDict_168_0_42, (int) ('u'), G__get_linked_tagnum(&G__SimGenDictLN_Particle), -1, 1, 1, 1, 1, 0, "u 'Particle' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHashKF(void) {
   /* HashKF */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__SimGenDictLN_HashKF));
   G__memfunc_setup("HashKF",533,G__SimGenDict_169_0_1, 105, G__get_linked_tagnum(&G__SimGenDictLN_HashKF), -1, 0, 1, 1, 1, 0, "C - - 10 - codesfile", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Hash",388,G__SimGenDict_169_0_2, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "l - 'Long_t' 0 - kf", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Put",313,G__SimGenDict_169_0_3, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "l - 'Long_t' 0 - kf", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Get",288,G__SimGenDict_169_0_4, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "l - 'Long_t' 0 - kf", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetParticle",1108,G__SimGenDict_169_0_5, 85, G__get_linked_tagnum(&G__SimGenDictLN_Particle), -1, 0, 1, 1, 1, 0, "l - 'Long_t' 0 - kf", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintParticleInfo",1741,G__SimGenDict_169_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "l - 'Long_t' 0 - kf", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintHashTable",1401,G__SimGenDict_169_0_7, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CheckHashTable",1354,G__SimGenDict_169_0_8, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__SimGenDict_169_0_9, 85, G__get_linked_tagnum(&G__SimGenDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HashKF::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__SimGenDict_169_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HashKF::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__SimGenDict_169_0_11, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HashKF::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__SimGenDict_169_0_12, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HashKF::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__SimGenDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__SimGenDict_169_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__SimGenDict_169_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HashKF::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__SimGenDict_169_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HashKF::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__SimGenDict_169_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HashKF::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__SimGenDict_169_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HashKF::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("HashKF", 533, G__SimGenDict_169_0_21, (int) ('i'), G__get_linked_tagnum(&G__SimGenDictLN_HashKF), -1, 0, 1, 1, 1, 0, "u 'HashKF' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~HashKF", 659, G__SimGenDict_169_0_22, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__SimGenDict_169_0_23, (int) ('u'), G__get_linked_tagnum(&G__SimGenDictLN_HashKF), -1, 1, 1, 1, 1, 0, "u 'HashKF' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncEventLoop(void) {
   /* EventLoop */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__SimGenDictLN_EventLoop));
   G__memfunc_setup("EventLoop",924,G__SimGenDict_607_0_1, 105, G__get_linked_tagnum(&G__SimGenDictLN_EventLoop), -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - nEvents f - 'Float_t' 0 - sqrts", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Start",526,G__SimGenDict_607_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEvents",917,G__SimGenDict_607_0_3, 85, G__get_linked_tagnum(&G__SimGenDictLN_TTree), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetParticles",1223,G__SimGenDict_607_0_4, 85, G__get_linked_tagnum(&G__SimGenDictLN_TClonesArray), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__SimGenDict_607_0_5, 85, G__get_linked_tagnum(&G__SimGenDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&EventLoop::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__SimGenDict_607_0_6, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EventLoop::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__SimGenDict_607_0_7, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&EventLoop::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__SimGenDict_607_0_8, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&EventLoop::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__SimGenDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__SimGenDict_607_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__SimGenDict_607_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EventLoop::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__SimGenDict_607_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&EventLoop::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__SimGenDict_607_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EventLoop::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__SimGenDict_607_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&EventLoop::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~EventLoop", 1050, G__SimGenDict_607_0_17, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncAnalysis(void) {
   /* Analysis */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__SimGenDictLN_Analysis));
   G__memfunc_setup("Analysis",836,G__SimGenDict_700_0_1, 105, G__get_linked_tagnum(&G__SimGenDictLN_Analysis), -1, 0, 2, 1, 1, 0, 
"U 'TTree' - 0 - events f - 'Float_t' 0 - sqrts_", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Analyse",717,G__SimGenDict_700_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHistograms",1345,G__SimGenDict_700_0_3, 85, G__get_linked_tagnum(&G__SimGenDictLN_TObjArray), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCanvases",1108,G__SimGenDict_700_0_4, 85, G__get_linked_tagnum(&G__SimGenDictLN_TObjArray), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ListParents",1145,G__SimGenDict_700_0_5, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - lb i - 'Int_t' 0 - ub", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FinalStateFilter",1617,G__SimGenDict_700_0_6, 103, -1, G__defined_typename("Bool_t"), 0, 4, 1, 1, 0, 
"i - 'Int_t' 0 - KF0 i - 'Int_t' 0 - KS0 "
"i - 'Int_t' 0 - parent0 U 'TLeaf' - 0 - KF_le0", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BuildArgfile",1194,G__SimGenDict_700_0_7, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - macro_size g - 'Bool_t' 0 - randomEnergy "
"f - 'Float_t' 0 - maxRandE", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__SimGenDict_700_0_8, 85, G__get_linked_tagnum(&G__SimGenDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&Analysis::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__SimGenDict_700_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Analysis::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__SimGenDict_700_0_10, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&Analysis::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__SimGenDict_700_0_11, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&Analysis::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__SimGenDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__SimGenDict_700_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__SimGenDict_700_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Analysis::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__SimGenDict_700_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Analysis::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__SimGenDict_700_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Analysis::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__SimGenDict_700_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Analysis::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("Analysis", 836, G__SimGenDict_700_0_20, (int) ('i'), G__get_linked_tagnum(&G__SimGenDictLN_Analysis), -1, 0, 1, 1, 1, 0, "u 'Analysis' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Analysis", 962, G__SimGenDict_700_0_21, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__SimGenDict_700_0_22, (int) ('u'), G__get_linked_tagnum(&G__SimGenDictLN_Analysis), -1, 1, 1, 1, 1, 0, "u 'Analysis' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncSimGenDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {
}

static void G__cpp_setup_global4() {
}

static void G__cpp_setup_global5() {
}

static void G__cpp_setup_global6() {
}

static void G__cpp_setup_global7() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalSimGenDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
  G__cpp_setup_global4();
  G__cpp_setup_global5();
  G__cpp_setup_global6();
  G__cpp_setup_global7();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcSimGenDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__SimGenDictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__SimGenDictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__SimGenDictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__SimGenDictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__SimGenDictLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__SimGenDictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR = { "vector<unsigned int,allocator<unsigned int> >" , 99 , -1 };
G__linked_taginfo G__SimGenDictLN_basic_ofstreamlEcharcOchar_traitslEchargRsPgR = { "basic_ofstream<char,char_traits<char> >" , 99 , -1 };
G__linked_taginfo G__SimGenDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__SimGenDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__SimGenDictLN_TObjArray = { "TObjArray" , 99 , -1 };
G__linked_taginfo G__SimGenDictLN_TClonesArray = { "TClonesArray" , 99 , -1 };
G__linked_taginfo G__SimGenDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__SimGenDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__SimGenDictLN_Particle = { "Particle" , 99 , -1 };
G__linked_taginfo G__SimGenDictLN_HashKF = { "HashKF" , 99 , -1 };
G__linked_taginfo G__SimGenDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__SimGenDictLN_TTree = { "TTree" , 99 , -1 };
G__linked_taginfo G__SimGenDictLN_TLeaf = { "TLeaf" , 99 , -1 };
G__linked_taginfo G__SimGenDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR = { "map<string,TObjArray*,less<string>,allocator<pair<const string,TObjArray*> > >" , 99 , -1 };
G__linked_taginfo G__SimGenDictLN_TPythia6 = { "TPythia6" , 99 , -1 };
G__linked_taginfo G__SimGenDictLN_TMCParticle = { "TMCParticle" , 99 , -1 };
G__linked_taginfo G__SimGenDictLN_vectorlETStringcOallocatorlETStringgRsPgR = { "vector<TString,allocator<TString> >" , 99 , -1 };
G__linked_taginfo G__SimGenDictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TString,allocator<TString> >::iterator>" , 99 , -1 };
G__linked_taginfo G__SimGenDictLN_EventLoop = { "EventLoop" , 99 , -1 };
G__linked_taginfo G__SimGenDictLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__SimGenDictLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__SimGenDictLN_TH1F = { "TH1F" , 99 , -1 };
G__linked_taginfo G__SimGenDictLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__SimGenDictLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__SimGenDictLN_TH2F = { "TH2F" , 99 , -1 };
G__linked_taginfo G__SimGenDictLN_pairlEunsignedsPintcOintgR = { "pair<unsigned int,int>" , 115 , -1 };
G__linked_taginfo G__SimGenDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR = { "vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >" , 99 , -1 };
G__linked_taginfo G__SimGenDictLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >::iterator>" , 99 , -1 };
G__linked_taginfo G__SimGenDictLN_TCanvas = { "TCanvas" , 99 , -1 };
G__linked_taginfo G__SimGenDictLN_Analysis = { "Analysis" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableSimGenDict() {
  G__SimGenDictLN_TClass.tagnum = -1 ;
  G__SimGenDictLN_TBuffer.tagnum = -1 ;
  G__SimGenDictLN_TMemberInspector.tagnum = -1 ;
  G__SimGenDictLN_TObject.tagnum = -1 ;
  G__SimGenDictLN_TString.tagnum = -1 ;
  G__SimGenDictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR.tagnum = -1 ;
  G__SimGenDictLN_basic_ofstreamlEcharcOchar_traitslEchargRsPgR.tagnum = -1 ;
  G__SimGenDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__SimGenDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__SimGenDictLN_TObjArray.tagnum = -1 ;
  G__SimGenDictLN_TClonesArray.tagnum = -1 ;
  G__SimGenDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__SimGenDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__SimGenDictLN_Particle.tagnum = -1 ;
  G__SimGenDictLN_HashKF.tagnum = -1 ;
  G__SimGenDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__SimGenDictLN_TTree.tagnum = -1 ;
  G__SimGenDictLN_TLeaf.tagnum = -1 ;
  G__SimGenDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR.tagnum = -1 ;
  G__SimGenDictLN_TPythia6.tagnum = -1 ;
  G__SimGenDictLN_TMCParticle.tagnum = -1 ;
  G__SimGenDictLN_vectorlETStringcOallocatorlETStringgRsPgR.tagnum = -1 ;
  G__SimGenDictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__SimGenDictLN_EventLoop.tagnum = -1 ;
  G__SimGenDictLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__SimGenDictLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__SimGenDictLN_TH1F.tagnum = -1 ;
  G__SimGenDictLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__SimGenDictLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__SimGenDictLN_TH2F.tagnum = -1 ;
  G__SimGenDictLN_pairlEunsignedsPintcOintgR.tagnum = -1 ;
  G__SimGenDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR.tagnum = -1 ;
  G__SimGenDictLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__SimGenDictLN_TCanvas.tagnum = -1 ;
  G__SimGenDictLN_Analysis.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableSimGenDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__SimGenDictLN_TClass);
   G__get_linked_tagnum_fwd(&G__SimGenDictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__SimGenDictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__SimGenDictLN_TObject);
   G__get_linked_tagnum_fwd(&G__SimGenDictLN_TString);
   G__get_linked_tagnum_fwd(&G__SimGenDictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR);
   G__get_linked_tagnum_fwd(&G__SimGenDictLN_basic_ofstreamlEcharcOchar_traitslEchargRsPgR);
   G__get_linked_tagnum_fwd(&G__SimGenDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__SimGenDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__SimGenDictLN_TObjArray);
   G__get_linked_tagnum_fwd(&G__SimGenDictLN_TClonesArray);
   G__get_linked_tagnum_fwd(&G__SimGenDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__SimGenDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__SimGenDictLN_Particle),sizeof(Particle),-1,323840,(char*)NULL,G__setup_memvarParticle,G__setup_memfuncParticle);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__SimGenDictLN_HashKF),sizeof(HashKF),-1,324608,(char*)NULL,G__setup_memvarHashKF,G__setup_memfuncHashKF);
   G__get_linked_tagnum_fwd(&G__SimGenDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__SimGenDictLN_TTree);
   G__get_linked_tagnum_fwd(&G__SimGenDictLN_TLeaf);
   G__get_linked_tagnum_fwd(&G__SimGenDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__SimGenDictLN_TPythia6);
   G__get_linked_tagnum_fwd(&G__SimGenDictLN_TMCParticle);
   G__get_linked_tagnum_fwd(&G__SimGenDictLN_vectorlETStringcOallocatorlETStringgRsPgR);
   G__get_linked_tagnum_fwd(&G__SimGenDictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__SimGenDictLN_EventLoop),sizeof(EventLoop),-1,324608,(char*)NULL,G__setup_memvarEventLoop,G__setup_memfuncEventLoop);
   G__get_linked_tagnum_fwd(&G__SimGenDictLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__SimGenDictLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__SimGenDictLN_TH1F);
   G__get_linked_tagnum_fwd(&G__SimGenDictLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__SimGenDictLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__SimGenDictLN_TH2F);
   G__get_linked_tagnum_fwd(&G__SimGenDictLN_pairlEunsignedsPintcOintgR);
   G__get_linked_tagnum_fwd(&G__SimGenDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__SimGenDictLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__SimGenDictLN_TCanvas);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__SimGenDictLN_Analysis),sizeof(Analysis),-1,323584,(char*)NULL,G__setup_memvarAnalysis,G__setup_memfuncAnalysis);
}
extern "C" void G__cpp_setupSimGenDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupSimGenDict()");
  G__set_cpp_environmentSimGenDict();
  G__cpp_setup_tagtableSimGenDict();

  G__cpp_setup_inheritanceSimGenDict();

  G__cpp_setup_typetableSimGenDict();

  G__cpp_setup_memvarSimGenDict();

  G__cpp_setup_memfuncSimGenDict();
  G__cpp_setup_globalSimGenDict();
  G__cpp_setup_funcSimGenDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncSimGenDict();
  return;
}
class G__cpp_setup_initSimGenDict {
  public:
    G__cpp_setup_initSimGenDict() { G__add_setup_func("SimGenDict",(G__incsetup)(&G__cpp_setupSimGenDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initSimGenDict() { G__remove_setup_func("SimGenDict"); }
};
G__cpp_setup_initSimGenDict G__cpp_setup_initializerSimGenDict;

